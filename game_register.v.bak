module game_register(
	input register_game,
	input reset,
	input [3:0] game_selected,
	output [4:0] columns,
	output [6:0] rows,
	output [6:0] col1_out,
	output [6:0] col2_out,
	output [6:0] col3_out,
	output [6:0] col4_out,
	output [6:0] col5_out
);
	reg game_save = 1'b0;
	reg [6:0] col1 = 7'b00000000;
	reg [6:0] col2 = 7'b00000000;
	reg [6:0] col3 = 7'b00000000;
	reg [6:0] col4 = 7'b00000000;
	reg [6:0] col5 = 7'b00000000;

	always @(posedge register or posedge reset) begin
		if(register)
			game_save = 1'b1;
		else if(reset)
			game_save = 1'b0;
		else 
			game_save = 1'b0;
	end

	always @(*) begin
		case (game_selected)
			4'b0001: begin
				col1 <= 7'b0111100;
				col2 <= 7'b0011101;
				col3 <= 7'b0110101;
				col4 <= 7'b1000111;
				col5 <= 7'b1110111;
			end
			4'b0010: 
		endcase
	end
endmodule
			
		